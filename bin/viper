#!/usr/bin/env python3

import sys
import os
import argparse
import traceback


try:
    VIPER_DIR = str(os.environ['VIPER_DIR'])
except Exception as e:
    print("Couldn't source VIPER directory")
    print(e)

# create VIPER_DIR path
sys.path.append(os.path.expanduser(VIPER_DIR))

'''
argument list:
1 - config file for Ion Gauge 354 settings (usually you wont change this much)
2 - config file for recording settings     (duration, intervals, etc.)
'''
parser = argparse.ArgumentParser(description='Executable for running VIPER', usage='''
======================================
Vacuum Ionisation Pressure Extraction Reporter (VIPER)
Use 'viper --help' for more information
======================================''', formatter_class=argparse.RawTextHelpFormatter)

parser.add_argument("gauge_config", nargs='?', default = None, help = 'ion gauge 354 config file.')
parser.add_argument("rec_config", nargs='?', default = None, help = 'recording config file.')
# acquire arguments

args = parser.parse_args()

def run_VIPER(gauge_config, rec_config):
    '''
    Run VIPER with the given ion gauge 354 and recording config files.
    Currently only for testing.
    Args:
        gauge_config (str): Path to the ion gauge 354 config file.
        rec_config (str): Path to the recording config file.
    '''

    from core.ion_gauge_354 import IonGauge354
    gauge = IonGauge354(gauge_config, rec_config)
    sys.exit(gauge.run_app())

try:
    run_VIPER(args.gauge_config, args.rec_config)
except Exception as e:
    print(e)
    traceback.print_exc()
    exit(1)
